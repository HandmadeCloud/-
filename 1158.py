# 1158 요세푸스 문제
n,k = map(int,input().split())
l = []
l_a = []
idx = k-1
for i in range(1,n+1):
    l.append(i)
    
while len(l)!= 0:
    if idx >= len(l):
        idx %= len(l)
    else:
        l_a.append(str(l.pop(idx)))
        idx += k -1
        
print("<", ", ".join(l_a), ">", sep='')

# 요세푸스 문제는 3학년 데이터 구조 및 알고리즘 수업에서 본 적이 있다.
# 그래서 문제를 이해하는 데에 큰 어려움이 있진 않았다.
# while 문을 통해서 리스트가 비어있지 않은 상황을 가정하고 진행했다.
# 인덱스가 리스트길이 l을 넘어가면 나머지 값을 인덱스에 적용하고
# l의 길이를 넘지 않으면 인덱스에 위치한 값을 추출하여 정답리스트에 추가하는 방식으로 구현하였다.
# 여기서는 출력 하는 방법에 대해서 조금 어려움이 있어 .join사용법을 참고하여 정답을 구현했다.
# 약간 고민했지만 경험(?)을 바탕으로  풀어낸 결과!
