# 11059 풀이
import sys


n = int(input())
h = list(map(int, input().split()))
# 발사된 각 화살의 높이
cnt = [0] * (n + 1)

# 화살의 높이를 확인한다.
for i in h:
  # 회살이 발사됐으면 화살로 풍선을 터뜨리고 화살의 높이를 내려야 한다.
    if cnt[i] > 0:
        # 풍선을 터트리고 원래 화살을 빼주고
        # 화살의 높이 -1 위치에 화살을 다시 조준한다.
        cnt[i] -= 1
        print("a")
        print(cnt)
        cnt[i - 1] += 1
        print("b")
        print(cnt)
    else:
        # 화살이 발사되지 않았으므로
        # 풍선을 터트리고 화살의 높이 -1 위치에 화살을 조준한다.
        cnt[i - 1] += 1
        print("c")
        print(cnt)

# 발사된 화살의 개수를 출력한다.
print(sum(cnt))

# 예시 코드는 
# 5
# 2 1 5 4 3이었다.

# 1. 가장 먼저 2에 활은 당연히 쏜다. 그리고 그 다음 높이를 생각 ->  cnt[2-1]의 위치에 1을 추가해준다(c케이스)  [0, 1, 0, 0, 0, 0]
# 2. 1의 위치값이 0보다 크므로 1을 빼주고 0의 위치에 1을 추가해준다. (a케이스) [0, 0, 0, 0, 0, 0] (b 케이스) [1, 0, 0, 0, 0, 0]
# 3. 5에 화살을 당연히 쏜다 그리고 그 다음 높이를 생각 -> cnt[5-1] 위치에 1을 추가한다. (c케이스) [1,0,0,0,1,0]
# 4. 4의 위치값이 0보다 크므로 2의 과정 반복 [1, 0, 0, 1, 0, 0]
# 5. 3의 위치값이 0보다 크므로 2의 과정 반복 [1, 0, 1, 0, 0, 0]
# 6. 결과 리스트의 합 : 2

# 화살의 높이를 리스트 개념에 맞추어 생각해 본 문제..
# 너무나 오랜 시간을 고민해 보았지만 이러한 접근은 생각도 못해보았다.
# 회심의 골드 문제 도전이었지만 새로운 접근방법을 배워볼 수 있던 좋은 기회였다.
